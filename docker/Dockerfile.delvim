# Docker file for the deb-packaged linux installation with LunarVim aboard (DEbLunarvimLINux)
# The resulting system contains LunarVim with custom config and plugins installed
# May be used as an IDE for any programming language

# SETUP
## Env Var
    # LVIM_INIT_SKIP : if set (no matter what value) - do not make any time consuming actions for LunarVim

FROM deshlin:u2004

ARG AptInstall="apt-get install -y --no-install-recommends"

RUN ${AptInstall} gnupg2 build-essential
RUN ${AptInstall} cmake universal-ctags ccal
# RUN ${AptInstall} python3 python3-pip  && pip3 install pynvim
# RUN ${AptInstall} nodejs && npm install -g neovim tree-sitter-cli # ?? curl -fsSL https://deb.nodesource.com/setup_18.x | bash - 


# neovim-unstable from ppa sometimes suggests buggy dev versions which cause fatal errors
# so prefer releases from github (available only for amd64) or falling back to ppa-stable otherwise (which is usually outdated)
RUN if [ $(arch) = x86_64 ] ; then \
        wget -qO - https://github.com/neovim/neovim/releases/download/stable/nvim-linux64.tar.gz \
            | tar -xz -C /usr/local --strip-components=1 ;\
    else \
        UCN=$(cat /etc/lsb-release | grep CODENAME | cut -d'=' -f2) ;\
        echo "deb https://ppa.launchpadcontent.net/neovim-ppa/stable/ubuntu $UCN main" | tee -a /etc/apt/sources.list ;\
        apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 9DBB0BE9366964F134855E2255F96FCF8231B6DD ;\
        apt update ;\
        ${AptInstall} neovim ;\
    fi
# also neovim can be built from sources (example below build debug version of nvim, but need release, investigate Makefile)
# RUN ${AptInstall} cmake gettext libtool-bin pkg-config
# RUN cd /tmp && git clone -b stable --single-branch --depth=1 https://github.com/neovim/neovim \
#       && cd /tmp/neovim && make -j4 && make install

# take stable release (not the stable branch which is also sometimes buggy)
# and install it to /root with codebase in /usr/local/share and plugins from the user config
# so it can be effiectively used on behalf of another user when copied to it's /home
ARG LVIMV=latest
#   treesitter-install does not send any signal on completion, so just let it work for some time and hope it'll be enough
#   do not install lua - it always throws errors with config.lua and this bug aint been fixed for years
RUN if [ $LVIMV = latest ] ; then \
        LVIMV=$(curl -s https://api.github.com/repos/LunarVim/LunarVim/releases/latest | jq -r '.tag_name') ; \
        echo "LVIM release is: $LVIMV" ; fi \
    && wget -qO - https://api.github.com/repos/LunarVim/LunarVim/tarball/$LVIMV | tar -xzC /usr/local/share/ \
    && /usr/local/share/LunarVim-*/utils/installer/install.sh --local --no-install-dependencies \
    && /root/.local/bin/lvim --headless +'TSInstall bash python cpp dockerfile typescript javascript css html json yaml toml' +'sleep 10' +qa
# if config was changed - do not rebuild all the base images just because of it, take new
COPY ./dots/config/lvim/config.lua /usr/local/share/lope/dots/config/lvim/config.lua
RUN cp -f /usr/local/share/lope/dots/config/lvim/config.lua /root/.config/lvim/config.lua
# want: install non-default but user-provided config with plugins to avoid wasting time for it on container start
# got: packer-sync works in headless mode very ugly, complete event is never sent, old plugins list is taken
#   i found no way to install plugins at image build stage - so doing it at first start
#   https://github.com/wbthomason/packer.nvim/issues/751 - and no recipe from here works
# RUN /root/.local/bin/lvim --headless +'autocmd User PackerComplete sleep 100m | qall' +PackerSync +'sleep 5' +qa

# the magic: take the root's lvim installation and just copy it to the end-user home dir
# this wont help to avoid installation of plugins - since there is no way to install them headless
# so it is required to install them all in headful mode - appropriate command is added to bash history
# user lvim config will be used
RUN echo "delvim" > /.dockername ; \
    printf 'mkdir -p /home/$1/.local/share /home/$1/.local/bin ; \n\
            cp -R /root/.local/share/lunarvim /home/$1/.local/share/lunarvim ; \n\
            chown -R $1:$1 /home/$1/.local/share ; \n\
            cp -R /root/.config/lvim /home/$1/.config/ ; \n\
            chown -R $1:$1 /home/$1/.config/lvim ; \n\
            sed "s/root/home\\/$1/" /root/.local/bin/lvim > /home/$1/.local/bin/lvim ; \n\
            chmod a+x /home/$1/.local/bin/lvim ; \n\
            chown $1:$1 /home/$1/.local/bin/lvim ; \n\
            test -v LVIM_INIT_SKIP || sudo -u $1 /home/$1/.local/bin/lvim +"autocmd User PackerComplete qall" +PackerSync ; \n\
            echo lvim >> /home/$1/.bash_history ; \n\
            echo lvim +\"autocmd User PackerComplete qall\" +PackerSync >> /home/$1/.bash_history ; \n\
            chown $1:$1 /home/$1/.bash_history ; \n\
           ' >> /.bootstrap.next

# do not rebuild base images it bootstrap script has changed
COPY ./docker/bootstrap.sh /.bootstrap.sh
