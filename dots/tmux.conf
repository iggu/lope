  # https://github.com/tmux/tmux/wiki/FAQ
  # Tmux initialization with SSH: -t -- tmux -u new -A -s main
  # Copy to tmux clipboard: cmd | tmux loadb -
  # List all commands: :list-commands
  # List all keybindings: <prefix> ? :list-keys
  # Show option value: :show-options -g -s <name>

setw -g window-status-current-style fg=black,bg=white
set -g status-bg green
set -g status-fg black
bind-key -r b select-pane -l;
bind-key ^b  last-window;
bind-key ^l  last-window;
# bind-key C-b send-prefix
bind C-c new-session

#################################################################
# INNER TMUX OPTIONS - TO AVOID CONTRADICTION WITH OUTER ONE 
# Set status and tabs atop
# Set blue tabs line atop, screen-like shortcuts
if-shell 'test -f /.dockerenv' " \
  set -g status-position top; \
  unbind b; unbind C-b; unbind a; unbind ^a; \
  set -g prefix C-a; \
  bind-key -r a select-pane -l; \
  bind-key ^a  last-window; \
  set -g status-bg blue; \
"
#################################################################

#bind-key ^i  select-pane -t :.+     # C-a C-i: cycle between panes in window
bind-key k   confirm-before -p "kill-pane #W? (y/n)" kill-pane
bind-key K   confirm-before -p "kill-window #W? (y/n)" kill-window

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
#set-window-option -g aggressive-resize on

# force to use 256 colors in whatever circumstances we are
set -g default-terminal "tmux-256color"
set -ga terminal-overrides ",*256col*:Tc"
set -ga terminal-overrides '*:Ss=\E[%p1%d q:Se=\E[ q'
set-environment -g COLORTERM "truecolor"
# use damned bash always!
set-option -g default-command bash
# sometimes over ssh Home and End are not functional - fix it
bind-key -n Home send Escape "OH"
bind-key -n End send Escape "OF"

# Note on binding:
#   bind is the same as bind-key
#   -r means 'repeatable without repeating the prefix'
#   -n means 'does not need prefix'
#
# setw (and set -w) is short for set-window-option, and is window-specific
# set -g  means 'set globally',
# set -u  un-sets,
# set -a  appends to a current value (for strings)

# quick reload of this config into the current tmux (useful while fiddling with it)
bind r source-file ~/.tmux.conf\; display-message "Configuration reloaded"
bind-key C-r source-file ~/.config/tmux/tmux.conf\; display-message "Configuration reloaded"

# start numbering at 1, which eases window switch by number (C-a 1, C-a 2)
set -g base-index 1
# start with pane 1
set -g pane-base-index 1
# reorder windows when deleting
set -g renumber-windows on
# screen scrollback in amount of lines.
set -g history-limit 10000

# mouse support has a few different mouse-somethings you can enable separately.
#   note that since 2.1, you can enable all via set -g mouse on
#set -g mouse-select-pane on  # switch to pane via mouse. Usually can't hurt
#set -g mode-mouse on         # adds scrollwheel scrolling (and a few other things)
#                             # ...but messes with middle-button pastes?

set -g set-titles on
# I like to identify my mess of graphical terminals by the current command
#  (and don't care about window numbers and such)    so I use:
set -g set-titles-string   '#W#F             #T'


# add or remap horizontal and vertical pane split to  -  and  |
# (easier to remember)
# You can leave the old ones, but I like " as window choosing (like screen)
# unbind %
bind-key | splitw -h
# unbind '"'
bind-key _ splitw -v
bind-key - splitw -v


# Pane navigation (I haven't settled on one yet)

# Both navigating and resizing panes is useful.
# using arrow-key combinations for both is easy for me to remember
# I'll navigate more than resize, so I put the latter under is under Shift-arrows
bind-key -r Left select-pane -L
bind-key -r Right select-pane -R
bind-key -r Down select-pane -D
bind-key -r Up select-pane -U
bind-key -r S-Left resize-pane -L 4
bind-key -r S-Right resize-pane -R 4
bind-key -r S-Down resize-pane -D 4
bind-key -r S-Up resize-pane -U 4
# see also repeat-time (we stay in )

# how long to show pane numbers (C-a q).
# Default is too fast to scan the screen.
# I don't use this much.
#set display-panes-time 2000  # (which is 2sec)
#set-option -g display-time 1000

# Cycle through windows, or panes.   I prefer using it for panes
#  (The way I use it, C-a C-a is good for most of my window switching needs)
#bind -n f12 select-pane -t :.+
#bind -n f12 next-window

# Joining windows into panes. (will relayout if the thing being moved is already paned)
# taken from http://unix.stackexchange.com/questions/14300/tmux-move-window-to-pane
#bind-key j command-prompt -p "join pane from:"  "join-pane -s '%%'"
#bind-key s command-prompt -p "send pane to:"  "join-pane -t '%%'"
# You may also want to know about break-pane, and remember relayouting via Prefix Meta-[0-5]


### Style
# puts user@hostname on the left of the window list (in a subtler color)
# clearer (color-based) marker of the active window in that list
# clearer current-pane contrast/coloring
# set -g status-left-length 30 # allow more length, for longer hostnames
# set -g status-left '#T  '

# https://github.com/junegunn/dotfiles

set-option -g status-justify left
set-option -g status-left '#[bg=colour72] #[bg=colour237] #[bg=colour236] #[bg=colour235]#[fg=colour185] #h #[bg=colour236] '
set-option -g status-left-length 16
set-option -g status-bg colour237
set-option -g status-right '#{?pane_synchronized, #[fg=colour196]*SYNC*#[default],}#[bg=colour236] #[bg=colour235]#[fg=colour185] #(date "+%a %b %d %H:%M") #[bg=colour236] #[bg=colour237] #[bg=colour72] '
set-option -g status-interval 60

set-option -g pane-border-status bottom
set-option -g pane-border-format "#{pane_index} #{pane_current_command}"
set-option -g pane-active-border-style fg=colour245
set-option -g pane-border-style fg=colour243

set-window-option -g window-status-format '#[bg=colour238]#[fg=colour107] #I #[bg=colour239]#[fg=colour110] #[bg=colour240]#W#[bg=colour239]#[fg=colour195]#F#[bg=colour238] '
set-window-option -g window-status-current-format '#[bg=colour236]#[fg=colour215] #I #[bg=colour235]#[fg=colour167] #[bg=colour234]#W#[bg=colour235]#[fg=colour195]#F#[bg=colour236] '

# set-window-option -g window-style 'bg=colour238'
# set-window-option -g window-active-style 'bg=colour237'
